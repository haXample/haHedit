
                                  -1-

                                                                                       
                  DOS HEDIT  Hex Editor V1.5

HEDIT is a nostalgic Utility that has a long tradition and was designed
to support the AEDIT Text Editor (Copyright Intel Corporation) in the 1980s.
It uses the AEDIT menu style command prompts. Thus, those users who 
were familiar with the AEDIT will get easily adjusted to the HEDIT. 

HEDIT 1.5 (32bit) now runs on Windows PCs. A DOS Version (16bit) still exists.

HEDIT filename | /MEMORY | [/MERGE filename] | [/HDD driveletter [SectorNr]]
  filename    Pathname of the input file to be edited.
  /MERGE      Merges any splitted 'filename.ODD/EVN' to 'filename.MRG'.
  /M[EMORY]   Examines 4Gbyte of (unprotected) system memory space.
  /HDD        Hard Drive sector editor. Usage e.g. [/HDD E: 0]
  /DES        Explains usage of the integrated DES Crypto Module.
  /TDES       Explains usage of the integrated TDES Crypto Module.
  /AES        Explains usage of the integrated AES Crypto Module.

HEDIT only can exchange bytes within a given (binary) input file. You cannot alter
the size of the input file by deleting, inserting or appending bytes to the file.
If you like to create a new binary file of any given size, use any editor to create
a file with dummy contents and then use HEDIT to exchange binaries for convenience.
Hedit creates a file HEDIT.TMP while running.

NOTES on 'Hedit.exe'
No spaces are allowed in Paths-/Filenames.
File-extensions are limited to 3 characters (DOS convention).
Capability of running console crypto batches.

Example: The invocation HEDIT /DOS320/MENU/MENUEXT.EXE displays the following screen:

	ADDRESS                  HEXADECIMAL                            ASCII

	00000000  4D 5A AC 01 6D 00 BA 05-80 01 21 00 FF FF 1B 0C  MZ..m.....!.....
	00000010  00 02 28 13 1A 00 00 00-1E 00 00 00 01 00 04 00  ..(.............
	00000020  00 00 06 00 00 00 08 00-00 00 1D 00 00 00 29 00  ..............).
	00000030  00 00 31 00 00 00 39 00-00 00 59 00 00 00 64 00  ..1...9...Y...d.
	00000040  00 00 6C 00 00 00 75 00-00 00 80 00 00 00 85 00  ..l...u.........
	00000050  00 00 8A 00 00 00 93 00-00 00 9A 00 00 00 A1 00  ................
	00000060  00 00 AA 00 00 00 B1 00-00 00 B8 00 00 00 BF 00  ................
	00000070  00 00 C6 00 00 00 CD 00-00 00 DA 00 00 00 E1 00  ................
	00000080  00 00 EA 00 00 00 F4 00-00 00 FC 00 00 00 04 01  ................
	00000090  00 00 15 01 00 00 4C 01-00 00 56 01 00 00 5F 01  ......L...V..._.
	000000A0  00 00 72 01 00 00 7A 01-00 00 83 01 00 00 8D 01  ..r...z.........
	000000B0  00 00 A6 01 00 00 AB 01-00 00 B5 01 00 00 BC 01  ................
	000000C0  00 00 C9 01 00 00 D7 01-00 00 EB 01 00 00 F2 01  ................
	000000D0  00 00 FC 01 00 00 09 02-00 00 17 02 00 00 2A 02  ..............*.
	000000E0  00 00 41 02 00 00 68 02-00 00 71 02 00 00 7F 02  ..A...h...q.....
	000000F0  00 00 AE 02 00 00 DD 02-00 00 FD 02 00 00 04 03  ................
 
                                                           Checksum = F88A                           
                                                           Size = 55724 byte(s)
                                                           End-Of_File at: 0000D9AB
	 -??- Hedit V1.5 (c)Copyright 1986-2021 by ha	                              
	 Block    Calc    Find     Get    Jump    Quit     Tag   Xchange    !System        
                                                                                          
      (-??-) HEDIT waiting for input
      (-!!-) HEDIT busy


All commands are invoked by typing the first letter of the command name displayed
in the command row25. Typing <ESC> always returns to the default command level.
Command input must be terminated by typing <CR>.
Use the arrow keys to move the cursor.



                                  -2-


Default level commands:

 B - D   Define a block and dump it in screen format
     P   Raw        = Put block as is (binary)
         AscHex2Bin = Put converted ascii block as binary
                      Example1: An AES key may be given (within an ascii text document) in readable rendition
                       E1 99 21 90 54 9F 6E D5 69 6A 2C 05 6C 31 54 10 or E1992190549F6ED5696A2C056C315410
                      Set a block around and put it RAW.
                      After conversion the block is put binary (required crypto keys) 
                       ·ô!êTün’ij,l1T = \xE1992190549F6ED5696A2C056C315410
                      Example2: Converts "KY RM 33 34 62 61 45 46 35 34" into \x0034baED54
     G   Get data from any external file into block, started at specific offset in that file.
     S   Scramble a block within a file (reversable) 

     X   Fill block with string-pattern or byte
     C   Calculate a block checksum

 T - B_tag   Tags B..D memorize locations in current file - used with Jump command
     C_Tag
     D_Tag

 X - H   Exchange (overwrite) data within Hex area (no insert or delete)
     A   Exchange (overwrite) data within Ascii area (no insert or delete)

        ADDRESS                  HEXADECIMAL                            ASCII

        0000B900  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
        0000B910  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
        0000B920  44 61 74 75 6D 20 20 20-3A 20 24 55 68 72 7A 65  Datum   : $Uhrze
        0000B930  69 74 20 3A 20 24 20 20-20 20 20 20 20 20 20 20  it : $          
        0000B940  20 20 20 20 20 53 20 49-20 45 20 4D 20 45 20 4E       S I E M E N
        0000B950  20 53 20 20 20 20 50 20-43 20 44 20 2D 20 32 20   S    P C D - 2 
        0000B960  20 20 20 20 20 20 20 20-20 20 20 20 20 20 24 56                $V
        0000B970  65 72 7A 65 69 63 68 6E-69 73 20 64 65 72 20 54  erzeichnis der T
        0000B980  84 74 69 67 6B 65 69 74-65 6E 24 45 69 6E 66 81  .tigkeiten$Einf.
        0000B990  67 65 6E 24 9A 62 65 72-73 63 68 72 65 69 62 65  gen$.berschreibe
        0000B9A0  6E 24 3A 20 44 61 74 65-69 20 6E 69 63 68 74 20  n$: Datei nicht 
        0000B9BA  67 65 57 52 5A 4C 42 52 4E 46 54 44 61 74 65 69  geWRZLBRNFTDatei
        0000B9C0  6E 61 6D 65 20 69 73 74-20 66 61 6C 73 63 68 24  name ist falsch$
        0000B9D0  3A 20 55 6E 65 72 77 61-72 74 65 74 65 73 20 44  : Unerwartetes D
        0000B9E0  61 74 65 69 65 6E 64 65-24 3A 20 44 69 73 6B 65  ateiende$: Diske
        0000B9F0  74 74 65 20 76 6F 6C 6C-24 44 69 73 6B 65 74 74  tte voll$Diskett
 
                                                           Checksum = F88A                           
                                                           Size = 55724 byte(s)
                                                           End-Of_File at: 0000D9AB
         -??-
         [Exchange ASCII]


        0000B990  67 65 6E 20 20 20 20 20 20 20 20 20 20 69 62 65  gen         ibe
        0000B9A0  6E 24 3A 20 44 61 74 65-69 20 6E 69 63 68 74 20  n$: Datei nicht 
        0000B9BA  67 65 FF FF FF FF FF FF-0F 00 F3 44 61 74 65 69  ge.........Datei
        0000B9C0  6E 61 6D 65 20 69 73 74-20 66 61 6C 73 63 68 24  name ist falsch$
        0000B9D0  3A 20 55 6E 65 72 77 61-72 74 65 74 65 73 20 44  : Unerwartetes D
        0000B9E0  61 74 65 69 65 6E 64 65-24 3A 20 44 69 73 6B 65  ateiende$: Diske
        0000B9F0  74 74 65 20 76 6F 6C 6C-24 44 69 73 6B 65 74 74  tte voll$Diskett
   
                                                           Checksum = F88A                           
                                                           Size = 55724 byte(s)
                                                           End-Of_File at: 0000D9AB
         -??-
         [Exchange Hex]



                                  -3-


 G - Get and exchange data in current block from start of block to cursor position
     with data read from any external file. Enter hex address of where to start in
     the external file.

        ADDRESS                  HEXADECIMAL                            ASCII

        0000B900  3A 20 2A 2A 2A 20 4E 65-74 7A 77 65 72 6B 2D 53  : *** Netzwerk-S
        0000B910  74 61 70 65 6C 76 65 72-61 72 62 65 69 74 75 6E  tapelverarbeitun
        0000B920  67 73 64 61 74 65 69 20-2A 2A 2A 0D 0A 3A 20 2A  gsdatei ***..: *
        0000B930  2A 2A 0D 0A 45 43 48 4F-20 4F 46 46 0D 0A 50 41  **..ECHO OFF..PA
        0000B940  54 48 20 43 3A 5C 4E 45-54 57 4F 52 4B 0D 0A 59  TH C:\NETWORK..Y
        0000B950  4E 50 52 4F 4D 50 54 20-4A 20 4E 20 34 31 20 53  NPROMPT J N 41 S
        0000B960  6F 6C 6C 20 64 61 73 20-4E 65 74 7A 77 65 72 6B  oll das Netzwerk
        0000B970  20 67 65 73 74 61 72 74-65 74 20 77 65 72 64 65   gestartet werde
        0000B980  6E 20 28 4A 2F 4E 29 3F-0D 0A 49 46 20 45 52 52  n (J/N)?..IF ERR
        0000B990  4F 52 4C 45 56 45 4C 20-31 20 47 4F 54 4F 20 41  ORLEVEL 1 GOTO A
        0000B9A0  0D 0A 45 43 48 4F 20 4F-4E 0D 0A 4E 45 54 20 53  ..ECHO ON..NET S
        0000B9BA  54 41 52 54 20 53 52 56-20 50 43 44 61 74 65 69  TART SRV PCDatei
        0000B9C0  6E 61 6D 65 20 69 73 74-20 66 61 6C 73 63 68 24  name ist falsch$
        0000B9D0  3A 20 55 6E 65 72 77 61-72 74 65 74 65 73 20 44  : Unerwartetes D
        0000B9E0  61 74 65 69 65 6E 64 65-24 3A 20 44 69 73 6B 65  ateiende$: Diske
        0000B9F0  74 74 65 20 76 6F 6C 6C-24 44 69 73 6B 65 74 74  tte voll$Diskett
 
                                                           Checksum = F88A                           
                                                           Size = 55724 byte(s)
                                                           End-Of_File at: 0000D9AB
         -??- 187 byte(s) read from file: \AUTOEXEC.BAT
	 Block    Calc    Find     Get    Jump    Quit     Tag   Xchange    !System        



 F - Find "string" forward from behind the cursor position to end of file:
     "string" can be a single character or a mixture of ascii or hex.
     Press <CNTL-G> and enter two digits (0..F) hexadecimal.

 J - Jump to start/end of file, to B_Tag..D_Tag or to specified offset address
 
 C - Hex/Dec Calculator - inclusive Hex/Dec conversion of a number 
     Calc operators: () + - * / % & | ^ ~ >> <<

 ! - Enter a console command (e.g. DIR)



                                  -4-


Q - Quit will display the following prompt:

        ADDRESS                  HEXADECIMAL                            ASCII

        0000D900  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
        0000D910  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
        0000D920  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
        0000D930  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
        0000D940  00 00 00 00 00 00 00 00-00 00 00 00 00 16 02 02  ................
        0000D950  18 0D 09 0C 0C 0C 07 08-FF FF FF 12 0D 12 02 FF  ................
        0000D960  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
        0000D970  00 00 00 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
        0000D980  00 00 00 00 00 00 00 00-00 00 00 00 00 00 81 81  ................
        0000D990  81 01 01 00 00 00 00 00-00 00 00 00 00 00 00 00  ................
        0000D9AB  00 00 00 00 00 00 00 00-00 00 00 00              ............
        
                                                            Size = 55724 byte(s)
                                                            End-Of_File at: 0000D9AB
                                                            Checksum = FC88                           
         -??- Editing \MENU\MENUEXT.EXE                    				                 
	 Block    Calc    Find     Get    Jump    Quit     Tag   Xchange    !System        



Quit Commands:

 A - Abort to Operating system: all changes lost? y or [n],
     enter <n> to resume editing; enter <y> for all changes lost.

*B - Write Intel Hex Format (remember the early days of EPROMs and 8080 CPUs)

 E - Exit to Operating system: the updated input file is written,
     a backup file .BAK is created.

 I - Initialize new file and restart editing without returning
     to operating system.

*S - Split the input file in .ODD/EVN for PROM-programming,
      and resume editing. If the input file's name has an .EXE
      suffix an EXE2BIN will skip the first 512 bytes of the
      Header, and the split starts at hex address 200h.
     Any splitted file .ODD/EVN can be re-constructed, if you
      invoke the HEDIT using the /MERGE option:
      e.g. the command "Hedit /MERGE test" will merge
      test.odd and test.evn and creates TEST.MRG
      The merged file TEST.MRG will be loaded for editing.
     Note: Use short filenames for *.ODD/EVN.

*U - Update the current input file to disk and resume editing.

 W - Write the updated input file to output file.

*) only available if a file has been loaded into Hedit.


 CTRL-UP    / CTRL-DOWN  one row up  / one row down
 CTRL-RIGHT / CTRL-LEFT  shift one column right / shift one column left
 PAGE-UP    / PAGE-Down  one page up / one page down
 HOME                    start of page
 End                     end of page


              -5-

DES Crypto Algorithm included in Hedit V1.5

DES Crypto Utility, V2.00 (c)1997-2021 by ha
Performs encryption and decryption using the Data Encryption Standard.

Usage: 'DES srcfile destfile [keyfile | /keystring] [options] [ivfile]'
  srcfile    Input file (plain text or encrypted text >= 8 bytes).
  destfile   Output file (after the algorithm has been applied).
  ivfile     Input iv-file (Init Vector, optional for CBC modes).

  keyfile    Input file containing the secret key.
             The key can be 8 bytes max. The effective key length is
             56 bits, i.e., parity bits of the 'key' are ignored.
  /keystring To avoid a keyfile the key may be directly given
             as a string of 8 ascii characters: e.g. /12345678.
[options]
  /ENCRYPT  Encrypts a file. The plaintext is DES encrypted.
            Mode: CBC with ciphertext stealing.

  /DECIPHER Deciphers an encrypted file. The DES ciphertext is converted
            into plaintext. Mode: CBC with ciphertext stealing.

  /MAC      A Message Authentication Code (MAC) is calculated from srcfile.
            The cryptographic signature is written to destfile, that can be
            appended to the plaintext as a cryptographic signature.
            Mode: (CMAC NIST SP 800-38B).

  /ECBENCRYPT  Encrypts a file. The plaintext is DES encrypted.
               Mode: ECB with ciphertext stealing.

  /ECBDECIPHER Deciphers an encrypted file. The DES ciphertext is converted
               into plaintext. Mode: ECB with ciphertext stealing.

  /CBCE     Encrypts a file. Mode: CBC with ISO/IEC 7816-4 padding.

  /CBCD     Deciphers an encrypted file. Mode: CBC with ISO padding.

  /ECBE     Encrypts a file. Mode: ECB with ISO/IEC 7816-4 padding.

  /ECBD     Deciphers an encrypted file. Mode: ECB with ISO padding.

  /XOR  Additional option. Usage: 'DES outfile infile /XOR'
        May be used in batches to perform 'outfile ^= infile'

This utility is very fast! When encrypting files, always be careful
 about keeping your keys privately at a secure place.
 Never send an encrypted file and its secret key through the same channel.
 For example, if you sent the encrypted file and this utility via e-mail
 to a certain person, you should communicate the secret key via
 telephone or surface mail, addressing the entitled person.

NOTE: For convenience you may copy or rename HEDIT.EXE to DES.EXE
      to get a utility for DES only.



                                  -6-

AES Crypto Algorithm included in Hedit V1.5

AES Crypto Utility, V1.00 (c)2021 by ha
Performs encryption and decryption using the Advanced Encryption Standard.

Usage: 'AES srcfile destfile [keyfile | /keystring] [options] [ivfile]'
  srcfile    Input file (plain text or encrypted text >= 16 bytes).
  destfile   Output file (after the algorithm has been applied).
  ivfile     Input iv-file (Init Vector, optional for CBC modes).

  keyfile    Input file containing the secret key.
             The key can be 32 bytes max (keysize = 128,192,256 bits).
             Short keys will be zero-expanded.
  /keystring To avoid a keyfile the key may be directly given as
             a string of up to 32 ascii characters: e.g. /1234567890...
[options]
  /ENCRYPT   Encrypts a file. The plaintext is AES encrypted.
             Mode: CBC with ciphertext stealing.

  /DECIPHER  Deciphers an encrypted file. The AES ciphertext is converted
             into plaintext. Mode: CBC with ciphertext stealing.

  /MAC       A Message Authentication Code (MAC) is calculated from srcfile.
             The cryptographic signature is written to destfile, that can be
             appended to the plaintext as a cryptographic signature.
             Mode: (CMAC NIST SP 800-38B).

  /ECBENCRYPT  Encrypts a file. The plaintext is AES encrypted.
               Mode: ECB with ciphertext stealing.

  /ECBDECIPHER Deciphers an encrypted file. The AES ciphertext is converted
               into plaintext. Mode: ECB with ciphertext stealing.

  /CBCE     Encrypts a file. Mode: CBC with ISO/IEC 7816-4 padding.

  /CBCD     Deciphers an encrypted file. Mode: CBC with ISO padding.

  /ECBE     Encrypts a file. Mode: ECB with ISO/IEC 7816-4 padding.

  /ECBD     Deciphers an encrypted file. Mode: ECB with ISO padding.

This utility is very fast! When encrypting files, always be careful
about keeping your keys privately at a secure place.
Never send an encrypted file and its secret key through the same channel.
For example, if you sent the encrypted file and this utility via e-mail
 to a certain person, you should communicate the secret key via
 telephone or surface mail, addressing the entitled person.

NOTE: For convenience you may copy or rename HEDIT.EXE to AES.EXE
      to get a utility for AES only.




                                  -7-

TDES (3DES, TDEA) Crypto Algorithm included in Hedit V1.5

TDES Crypto Utility, V1.00 (c)2021 by ha
Encryption and decryption using the Triple DES Algorithm.

Usage: 'TDES srcfile destfile [keyfile | /keystring] [options] [ivfile]'
  srcfile    Input file (plain text or encrypted text >= 8 bytes).
  destfile   Output file (after the algorithm has been applied).
  ivfile     Input iv-file (Init Vector, optional for CBC modes).

  keyfile    Input file containing the secret key.
             The effective key length is 168 bits, i.e., parity bits
             of the 'key' are ignored. Short keys will be zero-expanded.
  /keystring To avoid a keyfile the key may be directly given
             as a string of up to 24 ascii characters: e.g. /12345678...
[options]
  /ENCRYPT   Encrypts a file. The plaintext is TDES encrypted.
             Mode: CBC with ciphertext stealing.

  /DECIPHER  Deciphers an encrypted file. The TDES ciphertext is converted
             into plaintext. Mode: CBC with ciphertext stealing.

  /MAC       A Message Authentication Code (MAC) is calculated from srcfile.
             The cryptographic signature is written to destfile, which can be
             appended to the plaintext as a cryptographic signature.
             Mode: (CMAC NIST SP 800-38B).

  /ECBENCRYPT  Encrypts a file. The plaintext is TDES encrypted.
               Mode: ECB with ciphertext stealing.

  /ECBDECIPHER Deciphers an encrypted file. The TDES ciphertext is converted
               into plaintext. Mode: ECB with ciphertext stealing.

  /CBCE     Encrypts a file. Mode: CBC with ISO/IEC 7816-4 padding.

  /CBCD     Deciphers an encrypted file. Mode: CBC with ISO padding.

  /ECBE     Encrypts a file. Mode: ECB with ISO/IEC 7816-4 padding.

  /ECBD     Deciphers an encrypted file. Mode: ECB with ISO padding.

This utility is fast. When encrypting files, always be careful
about keeping your keys privately at a secure place.
Never send an encrypted file and its secret key through the same channel.
For example, if you sent the encrypted file and this utility via e-mail
 to a certain person, you should communicate the secret key via
 telephone or surface mail, addressing the entitled person.

NOTE: For convenience you may copy or rename HEDIT.EXE to TDES.EXE
      to get a utility for TDES only.


